services:
  worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - function-logs:/root/functions/logs
      - ./log/:/root/log/
    ports:
      - "50051:50051"
    #network_mode: host
    networks:
      - hyperfaas-network
    command: ["./main", "-address=0.0.0.0:50051", "-runtime=docker", "-log-level=info", "-log-format=text", "-log-file=/root/log/worker.log", "--auto-remove=true", "-containerized=true", "-caller-server-address=0.0.0.0:50052", "-database-type=http", "-update-buffer-size=100000"]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "sleep", "5"]
      interval: 6s
      timeout: 6s
      retries: 1
  fake-worker:
    build:
      context: .
      dockerfile: debianworker.Dockerfile
    volumes:
      - ./hyperFakeWorker/models/models.json:/app/models/models.json
      - ./hyperFakeModel/neural-network/models/final-models/n-to-1-averaged/leave-one-out/function_instances_count:/app/onnx-models/
    ports:
      - "50051:50051"
    networks:
      - hyperfaas-network
    command: ["./main",
     "--address=0.0.0.0:50051",
     "--database-type=http",
     "--runtime=${FAKE_RUNTIME_TYPE}",
     "--timeout=20",
     "--auto-remove",
     "--fake-models-path=${FAKE_MODELS_PATH}",
     "--log-level=debug",
     "--log-format=text",
     "--containerized=true",
     "--update-buffer-size=100000"]
    healthcheck:
      test: ["CMD", "sleep", "5"]
      interval: 6s
      timeout: 6s
      retries: 1
  leaf:
    build:
      context: .
      dockerfile: leaf.Dockerfile
    volumes:
      - ./log/:/root/log/
    ports:
      - "50050:50050"
    #network_mode: host
    networks:
      - hyperfaas-network
    command: ["./leaf", "--address=0.0.0.0:50050",
     "--log-level=info", "--log-format=text", "--log-file=/root/log/leaf.log",
     "--worker-ids=${WORKER_TYPE}:50051",
     "--database-address=http://database:8999",
     "--max-starting-instances-per-function=2",
     "--starting-instance-wait-timeout=10s",
     "--max-running-instances-per-function=10",
     "--panic-backoff=1s",
     "--panic-backoff-increase=1s",
     "--panic-max-backoff=10s",
     "--max-connection-idle=10s"]
    develop:
        watch:
            - action: rebuild
              path: .
              target: .
    depends_on:
      worker:
        condition: service_healthy
      fake-worker:
        condition: service_healthy
  database:
    build:
      context: .
      dockerfile: database.Dockerfile
    ports:
      - "8999:8999"
    #network_mode: host
    networks:
      - hyperfaas-network

volumes:
  function-logs:
    name: function-logs

networks:
  hyperfaas-network:
    name: hyperfaas-network
    driver: bridge